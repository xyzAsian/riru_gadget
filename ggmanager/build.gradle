apply plugin: 'com.android.application'
apply from: file(rootProject.file('module.gradle'))

android {
    ndkPath "/Users/a1/Library/Android/sdk/ndk-bundle/android-ndk-r21b"
    compileSdkVersion rootProject.ext.targetSdkVersion
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.gadget.manager"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode moduleVersionCode
        versionName "$moduleVersion"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", //使用的编译器clang/gcc
                        "-DANDROID_STL=c++_static"  //cmake默认就是 gnustl_static
                cppFlags "-std=c++11"
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }

        manifestPlaceholders = [GG_VERSION:"$gadgetVersion"]
    }

    signingConfigs {
        release {
            File strFile = new File("./key.jks")
            storeFile file(strFile)
            storePassword "xyz123"
            keyPassword "xyz123"
            keyAlias "key0"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/CMakeLists.txt"
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://dl.bintray.com/rikkaw/Libraries' }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

import java.nio.file.Files

def templateDir = file("$rootDir/template/magisk_module")

android.applicationVariants.all { variant ->
    if(variant.name.equalsIgnoreCase("release")) {
        variant.outputs.all { output ->
            def f = output.outputFileName
            if (f != null && f.endsWith('.apk')) {
                def fileName = "GGManager.apk"
                output.outputFileName = fileName
            }
        }
    }

    def task = variant.assembleProvider.get()
    task.doLast {
        def fileName = "GGManager.apk"
        Files.deleteIfExists(file("${templateDir.path}/system/app/$fileName").toPath());
        Files.copy(file("$buildDir/outputs/apk/release/$fileName").toPath(), file("${templateDir.path}/system/app/$fileName").toPath())

        def nativeOutDir = file("build/intermediates/cmake/release/obj")
        copy {
            from "$nativeOutDir/arm64-v8a/"
            into "${templateDir.path}/system/lib64/"
        }
        copy {
            from "$nativeOutDir/armeabi-v7a"
            into "${templateDir.path}/system/lib/"
        }
    }
}